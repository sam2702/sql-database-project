name: CI/CD for SQL and PowerShell

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test Scripts
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Validate PowerShell scripts
      run: |
        Get-ChildItem -Path "${{ github.workspace }}/dml/demo_data" -Filter *.ps1 | ForEach-Object {
          Write-Host "Running $($_.Name)"
          pwsh $_.FullName 
        }
    
    - name: Validate SQL scripts
      run: |
        $rootPath = "${{ github.workspace }}"
        Get-ChildItem -Path $rootPath -Filter *.sql -Recurse | Sort-Object FullName | ForEach-Object {
          Write-Host "Checking SQL syntax for $($_.FullName)"
          try {
            sqlcmd -S "${{ secrets.SQL_SERVER }}" `
                   -U "${{ secrets.SQL_USER }}" `
                   -P "${{ secrets.SQL_PASSWORD }}" `
                   -i $_.FullName -b
            Write-Host "$($_.Name) passed syntax check."
          } catch {
            Write-Host "Syntax error in $($_.Name): $_"
            exit 1
          }
        }        

  deploy:
    name: Deploy Scripts
    needs: test
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Deploy SQL scripts from single folder
      run: |
        $sqlPath = "${{ github.workspace }}/dml/demo_data"
        Get-ChildItem -Path $sqlPath -Filter *.sql | ForEach-Object {
          Write-Host "Deploying $($_.FullName)"
          try {
            sqlcmd -S "${{ secrets.SQL_SERVER }}" `
                   -U "${{ secrets.SQL_USER }}" `
                   -P "${{ secrets.SQL_PASSWORD }}" `
                   -i $_.FullName -b
            Write-Host "$($_.Name) deployed successfully."
          } catch {
            Write-Host "Deployment failed for $($_.Name): $_"
            exit 1
          }
        }

    - name: Deploy SQL scripts
      run: |
        $rootPath = "${{ github.workspace }}"
        Get-ChildItem -Path $rootPath -Filter *.sql -Recurse | Sort-Object FullName | ForEach-Object {
          Write-Host "Deploying $($_.FullName)"
            try {
              sqlcmd -S "${{ secrets.SQL_SERVER }}" `
                 -U "${{ secrets.SQL_USER }}" `
                 -P "${{ secrets.SQL_PASSWORD }}" `
                 -i $_.FullName -b
              Write-Host "$($_.Name) passed syntax check."
            } catch {
                Write-Host "Syntax error in $($_.Name): $_"
                exit 1
              }
            }
